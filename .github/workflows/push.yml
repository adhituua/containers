name: 'push'

on:
  push:
  schedule:
    - cron: '0 0 * * 5'

jobs:

  amd64:
    strategy:
      max-parallel: 1
      matrix:
        img: [ main, dr, gRPC, cosim, spinal, dev ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: run job
      env:
        TGT_ARCHS: amd64
        TGT_IMG: ${{ matrix.img }}
      run: ./run.sh -b $TGT_IMG
    - env:
        TGT_ARCHS:   amd64
        TGT_IMG:     ${{ matrix.img }}
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: ./run.sh -p $TGT_IMG

  arm:
    strategy:
      max-parallel: 1
      matrix:
        img: [ main, mambo, dr, cosim ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: set up qus
      run: |
        docker run --rm --privileged aptman/qus -- -r
        docker run --rm --privileged aptman/qus -s -- -p arm
    - name: run job
      env:
        TGT_ARCHS: arm
        TGT_IMG: ${{ matrix.img }}
      run: ./run.sh -b $TGT_IMG
    - env:
        TGT_ARCHS:   arm
        TGT_IMG:     ${{ matrix.img }}
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: ./run.sh -p $TGT_IMG

  arm64:
    strategy:
      max-parallel: 1
      matrix:
        img: [ main, mambo, dr, cosim ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: set up qus
      run: |
        docker run --rm --privileged aptman/qus -- -r
        docker run --rm --privileged aptman/qus -s -- -p aarch64
    - name: run job
      env:
        TGT_ARCHS: aarch64
        TGT_IMG: ${{ matrix.img }}
      run: ./run.sh -b $TGT_IMG
    - env:
        TGT_ARCHS:   aarch64
        TGT_IMG:     ${{ matrix.img }}
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: ./run.sh -p $TGT_IMG

  manifests:
    needs: [ amd64, arm, arm64 ]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v1
    - name: Update manifests
      run: ./run.sh -m
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}

# FIXIT: ensure that PR's do not trigger deploy steps!
# FIXIT: ensure that branches different from 'master' do not trigger deploy steps!
# FIXIT: ensure that PR's cannot access/use secrets!
