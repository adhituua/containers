name: 'push'

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 6'
  workflow_dispatch:

env:
    DOCKER_BUILDKIT: '1'

jobs:


  main:
    strategy:
      max-parallel: 3
      matrix:
        include:
        - { arch: amd64, qarch: ''}
        - { arch: arm,   qarch: arm}
        - { arch: arm64, qarch: aarch64}
    runs-on: ubuntu-latest
    env:
      TGT_ARCHS: ${{ matrix.arch }}
    steps:

    - uses: actions/checkout@v2

    - name: Setup qus
      if: ${{ matrix.qarch }} != ''
      run: |
        docker run --rm --privileged aptman/qus -- -r
        docker run --rm --privileged aptman/qus -s -- -p ${{ matrix.qarch }}

    - name: run job
      run: ./run.sh -b main

    - name: Login to docker.io
      if: github.event_name != 'pull_request' && github.repository == 'dbhi/containers'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}

    - if: github.event_name != 'pull_request' && github.repository == 'dbhi/containers'
      run: ./run.sh -p main


  amd64:
    needs: main
    strategy:
      max-parallel: 4
      matrix:
        img:
        - dr
        - gRPC
        - cosim
        - spinal
    runs-on: ubuntu-latest
    env:
      TGT_ARCHS: amd64
      TGT_IMG: ${{ matrix.img }}
    steps:

    - uses: actions/checkout@v2

    - name: run job
      run: ./run.sh -b $TGT_IMG

    - name: Login to docker.io
      if: github.event_name != 'pull_request' && github.repository == 'dbhi/containers'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}

    - if: github.event_name != 'pull_request' && github.repository == 'dbhi/containers'
      run: ./run.sh -p $TGT_IMG


  arm:
    needs: main
    strategy:
      max-parallel: 3
      matrix:
        img:
        - mambo
        - dr
        - cosim
    runs-on: ubuntu-latest
    env:
      TGT_ARCHS: arm
      TGT_IMG: ${{ matrix.img }}
    steps:

    - uses: actions/checkout@v2

    - name: set up qus
      run: |
        docker run --rm --privileged aptman/qus -- -r
        docker run --rm --privileged aptman/qus -s -- -p arm

    - name: run job
      run: ./run.sh -b $TGT_IMG

    - name: Login to docker.io
      if: github.event_name != 'pull_request' && github.repository == 'dbhi/containers'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}

    - if: github.event_name != 'pull_request' && github.repository == 'dbhi/containers'
      run: ./run.sh -p $TGT_IMG


  arm64:
    needs: main
    strategy:
      max-parallel: 3
      matrix:
        img:
        - mambo
        - dr
        - cosim
    runs-on: ubuntu-latest
    env:
      TGT_ARCHS: aarch64
      TGT_IMG: ${{ matrix.img }}
    steps:

    - uses: actions/checkout@v2

    - name: set up qus
      run: |
        docker run --rm --privileged aptman/qus -- -r
        docker run --rm --privileged aptman/qus -s -- -p aarch64

    - name: run job
      run: ./run.sh -b $TGT_IMG

    - name: Login to docker.io
      if: github.event_name != 'pull_request' && github.repository == 'dbhi/containers'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}

    - if: github.event_name != 'pull_request' && github.repository == 'dbhi/containers'
      run: ./run.sh -p $TGT_IMG


  octave:
    needs:
    - amd64
    - arm
    - arm64
    strategy:
      max-parallel: 3
      matrix:
        include:
        - { arch: amd64, qarch: ''}
        - { arch: arm,   qarch: arm}
        - { arch: arm64, qarch: aarch64}
    runs-on: ubuntu-latest
    env:
      TGT_ARCHS: ${{ matrix.arch }}
    steps:

    - uses: actions/checkout@v2

    - name: Setup qus
      if: ${{ matrix.qarch }} != ''
      run: |
        docker run --rm --privileged aptman/qus -- -r
        docker run --rm --privileged aptman/qus -s -- -p ${{ matrix.qarch }}

    - name: run job
      run: ./run.sh -b octave

    - name: Login to docker.io
      if: github.event_name != 'pull_request' && github.repository == 'dbhi/containers'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}

    - if: github.event_name != 'pull_request' && github.repository == 'dbhi/containers'
      run: ./run.sh -p octave


  manifests:
    if: github.event_name != 'pull_request' && github.repository == 'dbhi/containers'
    needs: octave
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Login to docker.io
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}

    - name: Update manifests
      run: ./run.sh -m

# FIXIT: ensure that branches different from 'master' do not trigger deploy steps!
