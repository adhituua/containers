ARG IMAGE="ubuntu:bionic"
ARG TAG_GHDL="50da90f509aa6de2961f1795af0be2452bc2c6d9"
ARG TAG_VUNIT="551314bfcf9268dad7aa71c064c36673d6f40241"
ARG TAG_DR="bf4df645bd13ed3ee4a777999f09b0b5cd3077d2"
#ARG TAG_MAMBO=

#
# Build GHDL
#

FROM $IMAGE AS build-base

ARG TAG_GHDL

WORKDIR /work

RUN apt-get update -qq \
  && DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends \
      ca-certificates \
      clang-6.0 \
      gcc \
      git \
      gnat-8 \
      libstdc++-8-dev \
      llvm-6.0-dev \
      make \
      zlib1g-dev \
  && apt-get autoclean && apt-get clean && apt-get -y autoremove \
  && update-ca-certificates

RUN git clone https://github.com/ghdl/ghdl && cd ghdl \
 && git checkout -b dbhi "$TAG_GHDL" \
 && sed -i.bak 's/\(^make\) \(-j$(nproc) 2>make_err\.log\)/\1 LIB_CFLAGS="$LIB_CFLAGS" OPT_FLAGS="$OPT_FLAGS" \2/g' ./dist/travis/build.sh \
 && rm ./dist/travis/build.sh.bak \
 && OPT_FLAGS=-fPIC LIB_CFLAGS=-fPIC ./dist/travis/build.sh -b llvm-6.0 -p ghdl-llvm-fPIC \
 && mv ghdl-llvm-fPIC.tgz /tmp

#
# GHDL and VUnit
#

FROM $IMAGE AS base

ARG TAG_VUNIT

RUN apt update -qq \
  && DEBIAN_FRONTEND=noninteractive apt -y install --no-install-recommends \
      ca-certificates \
      git \
      libgnat-8 \
      libllvm6.0 \
      make \
      python3 \
      python3-pip \
      time \
      zlib1g-dev \
  && apt autoclean && apt clean && apt -y autoremove \
  && update-ca-certificates

COPY --from=build-base /tmp/ghdl-llvm-fPIC.tgz /tmp/ghdl.tgz

RUN tar -xzf /tmp/ghdl.tgz -C /usr/local \
 && rm -f /tmp/* \
 && git clone --recurse-submodule https://github.com/vunit/vunit /opt/vunit && cd /opt/vunit \
 && git checkout -b dbhi "$TAG_VUNIT" \
 && rm -rf .git \
 && pip3 install -r /opt/vunit/requirements.txt

ENV PYTHONPATH=/opt/vunit

#
# Add MAMBO dependencies to base
#

FROM base AS mambo

#ARG TAG_MAMBO

RUN apt update -qq \
 && DEBIAN_FRONTEND=noninteractive apt -y install --no-install-recommends \
   libelf-dev \
   ruby \
 && apt autoclean && apt clean && apt -y autoremove

#
# Add DynamoRIO to base
#

FROM base AS dr

ARG TAG_DR

RUN apt update \
 && DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends \
   cmake \
   gcc \
   g++-6 \
   doxygen \
   transfig \
   imagemagick \
   ghostscript \
 && apt autoclean && apt clean && apt -y autoremove \
 && rm /usr/bin/gcc \
 && ln -s /usr/bin/gcc-6 /usr/bin/gcc \
 && ln -s /usr/bin/g++-6 /usr/bin/g++ \
 && git clone https://github.com/DynamoRIO/dynamorio /opt/dynamorio && cd /opt/dynamorio \
 && git checkout -b dbhi "$TAG_DR" \
 && mkdir build && cd build \
 && cmake .. && make -j

ENV DYNAMORIO_HOME /opt/dynamorio/build/

#
# Build Verilator
#

FROM base AS build-verilator

# Verilator (version 3.9+ required, in general apt-get will give 3.8)
RUN apt update && apt install -y \
  autoconf \
  g++ \
  flex \
  bison

RUN mkdir -p $WORKDIR/tools && cd $WORKDIR/tools \
 && git clone http://git.veripool.org/git/verilator \
 && cd verilator \
 && unset VERILATOR_ROOT \
 && autoconf \
 && ./configure --prefix="/usr/local/"\
 && make -j$(nproc) \
 && make install DESTDIR="$(pwd)/install-verilator" \
 && mv install-verilator/usr/local /tmp/verilator
